@startuml

title __CONDITION's Class Diagram__\n

  package org.fluentcodes.projects.elasticobjects {
    package org.fluentcodes.projects.elasticobjects.condition {
      class And {
          {static} + DELIMITER : String
          {static} - LOG : Logger
          {static} - SPLITTER : String
          ~ conditions : List<Condition>
          + And()
          + And()
          + And()
          + getConditions()
          + size()
          + getCondition()
          + addCondition()
          + addConditions()
          + createQuery()
          + filter()
          + filter()
          + toString()
      }
    }
  }
  

  package org.fluentcodes.projects.elasticobjects {
    package org.fluentcodes.projects.elasticobjects.condition {
      interface Condition {
          {static} + EQ : String
          {static} + EQUALS : String
          {static} + MATCH : String
          {static} + EX : String
          {static} + NEX : String
          {static} + LIKE : String
          {static} + NE : String
          {static} + ifPattern : Pattern
          {abstract} + compare()
          {abstract} + createQuery()
          {abstract} + getKey()
          {abstract} + getValue()
          {abstract} + filter()
          {abstract} + filter()
      }
    }
  }
  

  package org.fluentcodes.projects.elasticobjects {
    package org.fluentcodes.projects.elasticobjects.condition {
      class Eq {
          {static} - LOG : Logger
          - object : Object
          - key : String
          + Eq()
          + getKey()
          + getValue()
          + compare()
          + createQuery()
          + createCondition()
          + filter()
          + filter()
          + toString()
      }
    }
  }
  

  package org.fluentcodes.projects.elasticobjects {
    package org.fluentcodes.projects.elasticobjects.condition {
      class Exists {
          {static} - LOG : Logger
          - key : String
          + Exists()
          + getKey()
          + getValue()
          + compare()
          + createQuery()
          + createCondition()
          + filter()
          + filter()
          + toString()
      }
    }
  }
  

  package org.fluentcodes.projects.elasticobjects {
    package org.fluentcodes.projects.elasticobjects.condition {
      class Like {
          {static} - LOG : Logger
          - object : Object
          - key : String
          + Like()
          + getKey()
          + getValue()
          + compare()
          + createQuery()
          + filter()
          + filter()
          + toString()
      }
    }
  }
  

  package org.fluentcodes.projects.elasticobjects {
    package org.fluentcodes.projects.elasticobjects.condition {
      class Match {
          {static} - LOG : Logger
          - object : Object
          - key : String
          + Match()
          + getKey()
          + getValue()
          + compare()
          + createQuery()
          + filter()
          + filter()
          + toString()
      }
    }
  }
  

  package org.fluentcodes.projects.elasticobjects {
    package org.fluentcodes.projects.elasticobjects.condition {
      class NotExists {
          {static} - LOG : Logger
          - key : String
          + NotExists()
          + getKey()
          + getValue()
          + compare()
          + createQuery()
          + createCondition()
          + filter()
          + filter()
          + toString()
      }
    }
  }
  

  package org.fluentcodes.projects.elasticobjects {
    package org.fluentcodes.projects.elasticobjects.condition {
      class Or {
          {static} + DELIMITER : String
          {static} - LOG : Logger
          {static} - SPLITTER : String
          ~ andList : List<And>
          ~ keyValues : Map<String, Object>
          + Or()
          + Or()
          + Or()
          + addAnd()
          + addAndToAll()
          + getKeyValueMap()
          + createQuery()
          + filter()
          + filter()
          + getAndList()
          + size()
          + getAnd()
          + isEmpty()
          + toString()
      }
    }
  }
  

  Eq -up-|> Condition
  Exists -up-|> Condition
  Like -up-|> Condition
  Match -up-|> Condition
  NotExists -up-|> Condition


right footer


PlantUML diagram generated by SketchIt! (https://bitbucket.org/pmesmeur/sketch.it)
For more information about this tool, please contact philippe.mesmeur@gmail.com
endfooter

@enduml
