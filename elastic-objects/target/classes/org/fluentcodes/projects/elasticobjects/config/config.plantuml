@startuml

title __CONFIG's Class Diagram__\n

  package org.fluentcodes.projects.elasticobjects {
    package org.fluentcodes.projects.elasticobjects.config {
      class ClassFinder {
          - SEARCH : String
          - scanLog : StringBuilder
          - mapKeyClass : Map<String, String>
          - mapKeyOrigin : Map<String, String>
          - jarFilter : List<String>
          - jarExcludeFilter : List<String>
          - fileFilter : List<String>
          - fileExcludeFilter : List<String>
          - pathFilter : List<String>
          - pathExcludeFilter : List<String>
          + ClassFinder()
          + find()
          + scanLog()
          + addJarFilter()
          + addJarExcludeFilter()
          + addFileFilter()
          + addFileExcludeFilter()
          + addPathFilter()
          + addPathExcludeFilter()
          + getMapKeyClass()
          + getMapKeyOrigin()
          - getContextClassLoaderUrls()
          - addToMap()
          - filter()
          - visitFile()
          - visitJar()
      }
    }
  }
  

  package org.fluentcodes.projects.elasticobjects {
    package org.fluentcodes.projects.elasticobjects.config {
      interface Config {
          {abstract} + resolve()
          {abstract} + getKey()
          {abstract} + getModule()
          {abstract} + getSubModule()
          {abstract} + getScope()
          {abstract} + getConfigsCache()
          {abstract} + getPath()
          {abstract} + getMapPath()
          {abstract} + hasScope()
      }
    }
  }
  

  package org.fluentcodes.projects.elasticobjects {
    package org.fluentcodes.projects.elasticobjects.config {
      class ConfigConfig {
          {static} - LOG : Logger
          - configKey : String
          - filterModule : String
          - filterSubModule : String
          - filterKey : String
          - filterConfigName : String
          + ConfigConfig()
          + getKey()
          + getConfigKey()
          + getFilterModule()
          + getFilterSubModule()
          + getFilterKey()
          + getFilterConfigName()
      }
    }
  }
  

  package org.fluentcodes.projects.elasticobjects {
    package org.fluentcodes.projects.elasticobjects.config {
      class Builder {
          - configKey : String
          - filterModule : String
          - filterSubModule : String
          - filterKey : String
          - filterConfigName : String
          + Builder()
          # prepare()
          + build()
      }
    }
  }
  

  package org.fluentcodes.projects.elasticobjects {
    package org.fluentcodes.projects.elasticobjects.config {
      class Builder {
          - module : String
          - subModule : String
          - path : String
          - mapPath : String
          - scope : List<Scope>
          - description : String
          - naturalId : String
          - id : Long
          - creationDate : Date
          - expanded : boolean
          + Builder()
          # prepare()
          # isExpanded()
      }
    }
  }
  

  package org.fluentcodes.projects.elasticobjects {
    package org.fluentcodes.projects.elasticobjects.config {
      abstract class ConfigIO {
          - mapPath : String
          + ConfigIO()
          + getRolePermissions()
          + getPermissions()
          + getPermissions()
          + hasPermissions()
          + hasMapPath()
          + getMapPath()
      }
    }
  }
  

  package org.fluentcodes.projects.elasticobjects {
    package org.fluentcodes.projects.elasticobjects.config {
      class Builder {
          - mapPath : String
          + Builder()
          # prepare()
      }
    }
  }
  

  package org.fluentcodes.projects.elasticobjects {
    package org.fluentcodes.projects.elasticobjects.config {
      class Builder {
          - module : String
          - subModule : String
          - path : String
          - mapPath : String
          - scope : List<Scope>
          - description : String
          - naturalId : String
          - id : Long
          - creationDate : Date
          - expanded : boolean
          + Builder()
          # prepare()
          # isExpanded()
      }
    }
  }
  

  package org.fluentcodes.projects.elasticobjects {
    package org.fluentcodes.projects.elasticobjects.config {
      interface ConfigIOInterface {
          {abstract} + createIO()
          {abstract} + getRolePermissions()
          {abstract} + getPermissions()
          {abstract} + getPermissions()
          {abstract} + hasPermissions()
          {abstract} + hasMapPath()
          {abstract} + getMapPath()
      }
    }
  }
  

  package org.fluentcodes.projects.elasticobjects {
    package org.fluentcodes.projects.elasticobjects.config {
      abstract class ConfigImpl {
          - module : String
          - subModule : String
          - path : String
          - mapPath : String
          - scope : List<Scope>
          - resolved : boolean
          + ConfigImpl()
          # isResolved()
          # setResolved()
          + resolve()
          + getModule()
          + getSubModule()
          + getPath()
          + getMapPath()
          + getScope()
          + hasScope()
          + getConfigsCache()
          + toString()
          + serialize()
      }
    }
  }
  

  package org.fluentcodes.projects.elasticobjects {
    package org.fluentcodes.projects.elasticobjects.config {
      class Builder {
          - module : String
          - subModule : String
          - path : String
          - mapPath : String
          - scope : List<Scope>
          - description : String
          - naturalId : String
          - id : Long
          - creationDate : Date
          - expanded : boolean
          + Builder()
          # prepare()
          # isExpanded()
      }
    }
  }
  

  package org.fluentcodes.projects.elasticobjects {
    package org.fluentcodes.projects.elasticobjects.config {
      class ConfigsImmutable {
          {static} + LOG : Logger
          + ConfigsImmutable()
      }
    }
  }
  

  package org.fluentcodes.projects.elasticobjects {
    package org.fluentcodes.projects.elasticobjects.config {
      class ConfigsModel {
          {static} + LOG : Logger
          - classPathMap : Map<String, String>
          - callSet : Set<String>
          + ConfigsModel()
          - initClassMapPath()
          # initCallMap()
          + getCallSet()
          + find()
          # init()
      }
    }
  }
  

  package org.fluentcodes.projects.elasticobjects {
    package org.fluentcodes.projects.elasticobjects.config {
      class DBFieldParams {
          - fieldName : String
          - length : Integer
          - unique : Boolean
          - notNull : Boolean
          - hibernate : String
          - table : String
          - join : String
          - joinInverse : String
          - mapKey : String
          - defaultValue : String
          + DBFieldParams()
          + getFieldName()
          + setFieldName()
          + getLength()
          + setLength()
          + isUnique()
          + setUnique()
          + isNotNull()
          + setNotNull()
          + getHibernate()
          + setHibernate()
          + getTable()
          + setTable()
          + getJoin()
          + setJoin()
          + getJoinInverse()
          + setJoinInverse()
          + getMapKey()
          + setMapKey()
          + getDefaultValue()
          + setDefaultValue()
      }
    }
  }
  

  package org.fluentcodes.projects.elasticobjects {
    package org.fluentcodes.projects.elasticobjects.config {
      class DBParams {
          - table : String
          - idKey : String
          - naturalKeys : List<String>
          - hibernateAnnotations : Boolean
          + DBParams()
          + getTable()
          + getIdKey()
          + getNaturalKeys()
          + isHibernateAnnotations()
      }
    }
  }
  

  package org.fluentcodes.projects.elasticobjects {
    package org.fluentcodes.projects.elasticobjects.config {
      class EOConfigReader {
          {static} + LOG : Logger
          - cacheClass : Class<? extends Config>
          - builderClass : Class
          - builderMethod : Method
          + EOConfigReader()
          + read()
          + read()
          + read()
          + add()
          + add()
          + add()
          + read()
          + read()
          + read()
          + read()
      }
    }
  }
  

  package org.fluentcodes.projects.elasticobjects {
    package org.fluentcodes.projects.elasticobjects.config {
      class EOConfigs {
          {static} + LOG : Logger
          - configMap : Map<String, Config>
          - configClass : Class<? extends Config>
          + EOConfigs()
          # EOConfigs()
          + getConfigsCache()
          # addConfigs()
          + getConfigMap()
          + find()
          + getKeys()
          # add()
          # addAll()
          + toString()
      }
    }
  }
  

  package org.fluentcodes.projects.elasticobjects {
    package org.fluentcodes.projects.elasticobjects.config {
      class EOConfigsCache {
          {static} - LOG : Logger
          - eoConfigsMap : Map<Class, EOConfigs>
          - localSerialized : boolean
          - serialized : String
          - modelPattern : Pattern
          + EOConfigsCache()
          + EOConfigsCache()
          + EOConfigsCache()
          # getScope()
          + getKeys()
          + getEoConfigsMap()
          + getProviderMap()
          + find()
          + find()
          + getConfig()
          + getCallSet()
          + getKeys()
          + findField()
          + findModel()
          + findModel()
          + findTemplate()
          + findFile()
          + findJson()
          + findValue()
          + findModel()
          + transform()
          + transform()
          + transform()
          + transform()
          + serialize()
      }
    }
  }
  

  package org.fluentcodes.projects.elasticobjects {
    package org.fluentcodes.projects.elasticobjects.config {
      class EOConfigsField {
          {static} + LOG : Logger
          + EOConfigsField()
          + find()
      }
    }
  }
  

  package org.fluentcodes.projects.elasticobjects {
    package org.fluentcodes.projects.elasticobjects.config {
      interface EOConfigsInterface {
          {abstract} + getConfigMap()
          {abstract} + find()
          {abstract} + getKeys()
      }
    }
  }
  

  package org.fluentcodes.projects.elasticobjects {
    package org.fluentcodes.projects.elasticobjects.config {
      class EOFieldParams {
          - attributes : Map
          - provideInAction : boolean
          + EOFieldParams()
          + getPathPattern()
          + hasPathPattern()
          + isFilterNothing()
          + getPathPatternAsString()
          + isDeliverAction()
          - resolve()
      }
    }
  }
  

  package org.fluentcodes.projects.elasticobjects {
    package org.fluentcodes.projects.elasticobjects.config {
      class EOParams {
          - create : Boolean
          - scope : List<Scope>
          - methods : List<String>
          - attributeList : List<String>
          - modelConfigKey : String
          - defaultImplementation : String
          + EOParams()
          + getCreate()
          + isCreate()
          + getShapeType()
          + getScope()
          - setScope()
          + getMethods()
          + getAttributeList()
          + getModelConfigKey()
          + getDefaultImplementation()
          + getPathPattern()
          + getPathPatternAsString()
      }
    }
  }
  

  package org.fluentcodes.projects.elasticobjects {
    package org.fluentcodes.projects.elasticobjects.config {
      class FieldConfig {
          {static} - LOG : Logger
          - toSerialize : Boolean
          - fieldKey : String
          - customFieldParams : Map
          - modelKeys : String
          + FieldConfig()
          {static} # add()
          + resolve()
          + getKey()
          + getFieldKey()
          + getDbFieldParams()
          + getEoFieldParams()
          + getViewFieldParams()
          + getCustomFieldParams()
          + getModels()
          + getModelKeys()
          + getPathPattern()
          + hasPathPattern()
          + isFilterNothing()
          + isNotNull()
          + getNotNull()
          + isUnique()
          + getUnique()
          + getFieldName()
          + getHibernate()
          + getTable()
          + getJoin()
          + getJoinInverse()
          + getMapKey()
          + getLength()
          + getModelClass()
          + getChildClass()
          + getModel()
          + getModelConfig()
          + getChildModel()
      }
    }
  }
  

  package org.fluentcodes.projects.elasticobjects {
    package org.fluentcodes.projects.elasticobjects.config {
      class Builder {
          - toSerialize : Boolean
          - fieldKey : String
          - customFieldParams : Map
          - modelKeys : String
          + Builder()
          # prepare()
          + build()
      }
    }
  }
  

  package org.fluentcodes.projects.elasticobjects {
    package org.fluentcodes.projects.elasticobjects.config {
      class Builder {
          - module : String
          - subModule : String
          - path : String
          - mapPath : String
          - scope : List<Scope>
          - description : String
          - naturalId : String
          - id : Long
          - creationDate : Date
          - expanded : boolean
          + Builder()
          # prepare()
          # isExpanded()
      }
    }
  }
  

  package org.fluentcodes.projects.elasticobjects {
    package org.fluentcodes.projects.elasticobjects.config {
      class FileConfig {
          {static} + CLASSPATH : String
          - fileName : String
          - filePath : String
          - fileKey : String
          - hostKey : String
          - cached : Boolean
          - cachedContent : String
          + FileConfig()
          + createIO()
          + getKey()
          + hasCachedContent()
          + getCachedContent()
          + setCachedContent()
          + getUrlPath()
          + findUrl()
          + getUrl()
          + write()
          + getFileName()
          + getFilePath()
          + hasFileName()
          + getFileKey()
          + getHostKey()
          + getHostConfig()
          + isCached()
      }
    }
  }
  

  package org.fluentcodes.projects.elasticobjects {
    package org.fluentcodes.projects.elasticobjects.config {
      class Builder {
          {static} + ADAPTER_PATH : String
          - fileName : String
          - filePath : String
          - fileKey : String
          - cached : Boolean
          - hostKey : String
          + Builder()
          # prepare()
          + build()
      }
    }
  }
  

  package org.fluentcodes.projects.elasticobjects {
    package org.fluentcodes.projects.elasticobjects.config {
      class Builder {
          - mapPath : String
          # prepare()
      }
    }
  }
  

  package org.fluentcodes.projects.elasticobjects {
    package org.fluentcodes.projects.elasticobjects.config {
      class Builder {
          - module : String
          - subModule : String
          - path : String
          - mapPath : String
          - scope : List<Scope>
          - description : String
          - naturalId : String
          - id : Long
          - creationDate : Date
          - expanded : boolean
          + Builder()
          # prepare()
          # isExpanded()
      }
    }
  }
  

  package org.fluentcodes.projects.elasticobjects {
    package org.fluentcodes.projects.elasticobjects.config {
      class FileIO {
          + FileIO()
          + read()
          + write()
          + write()
          - write()
      }
    }
  }
  

  package org.fluentcodes.projects.elasticobjects {
    package org.fluentcodes.projects.elasticobjects.config {
      class HostConfig {
          - hostKey : String
          - port : Integer
          - protocol : String
          - hostName : String
          - user : String
          - password : String
          # HostConfig()
          + getKey()
          + getHostKey()
          + getPort()
          + getProtocol()
          + getHostName()
          + getUser()
          + getPassword()
          + getUrlPath()
      }
    }
  }
  

  package org.fluentcodes.projects.elasticobjects {
    package org.fluentcodes.projects.elasticobjects.config {
      class Builder {
          - hostKey : String
          - port : Integer
          - protocol : String
          - hostName : String
          - user : String
          - password : String
          + Builder()
          # prepare()
          # getHostKey()
          + build()
      }
    }
  }
  

  package org.fluentcodes.projects.elasticobjects {
    package org.fluentcodes.projects.elasticobjects.config {
      class Builder {
          - mapPath : String
          # prepare()
      }
    }
  }
  

  package org.fluentcodes.projects.elasticobjects {
    package org.fluentcodes.projects.elasticobjects.config {
      class Builder {
          - module : String
          - subModule : String
          - path : String
          - mapPath : String
          - scope : List<Scope>
          - description : String
          - naturalId : String
          - id : Long
          - creationDate : Date
          - expanded : boolean
          + Builder()
          # prepare()
          # isExpanded()
      }
    }
  }
  

  package org.fluentcodes.projects.elasticobjects {
    package org.fluentcodes.projects.elasticobjects.config {
      interface IOInterface {
          {abstract} + read()
          {abstract} + write()
      }
    }
  }
  

  package org.fluentcodes.projects.elasticobjects {
    package org.fluentcodes.projects.elasticobjects.config {
      class JsonConfig {
          {static} - LOG : Logger
          - jsonKey : String
          - indent : Integer
          + JsonConfig()
          + getKey()
          + getJsonKey()
          + getSerializationType()
          + getIndent()
      }
    }
  }
  

  package org.fluentcodes.projects.elasticobjects {
    package org.fluentcodes.projects.elasticobjects.config {
      class Builder {
          - jsonKey : String
          - indent : Integer
          + Builder()
          # prepare()
          + build()
      }
    }
  }
  

  package org.fluentcodes.projects.elasticobjects {
    package org.fluentcodes.projects.elasticobjects.config {
      class Builder {
          {static} + ADAPTER_PATH : String
          - fileName : String
          - filePath : String
          - fileKey : String
          - cached : Boolean
          - hostKey : String
          + Builder()
          # prepare()
          + build()
      }
    }
  }
  

  package org.fluentcodes.projects.elasticobjects {
    package org.fluentcodes.projects.elasticobjects.config {
      class Builder {
          - mapPath : String
          # prepare()
      }
    }
  }
  

  package org.fluentcodes.projects.elasticobjects {
    package org.fluentcodes.projects.elasticobjects.config {
      class Builder {
          - module : String
          - subModule : String
          - path : String
          - mapPath : String
          - scope : List<Scope>
          - description : String
          - naturalId : String
          - id : Long
          - creationDate : Date
          - expanded : boolean
          + Builder()
          # prepare()
          # isExpanded()
      }
    }
  }
  

  package org.fluentcodes.projects.elasticobjects {
    package org.fluentcodes.projects.elasticobjects.config {
      abstract class ListConfig {
          - resolved : boolean
          + ListConfig()
          + getListParams()
          + getListMapper()
          + getRowHead()
          + hasRowHead()
          + getRowStart()
          + getRowEnd()
          + getLength()
          + getOr()
          + hasColKeys()
          + getColKeys()
          + setColKeys()
          + resolve()
      }
    }
  }
  

  package org.fluentcodes.projects.elasticobjects {
    package org.fluentcodes.projects.elasticobjects.config {
      class Builder {
          + Builder()
          # prepare()
      }
    }
  }
  

  package org.fluentcodes.projects.elasticobjects {
    package org.fluentcodes.projects.elasticobjects.config {
      class Builder {
          - mapPath : String
          # prepare()
      }
    }
  }
  

  package org.fluentcodes.projects.elasticobjects {
    package org.fluentcodes.projects.elasticobjects.config {
      class Builder {
          - module : String
          - subModule : String
          - path : String
          - mapPath : String
          - scope : List<Scope>
          - description : String
          - naturalId : String
          - id : Long
          - creationDate : Date
          - expanded : boolean
          + Builder()
          # prepare()
          # isExpanded()
      }
    }
  }
  

  package org.fluentcodes.projects.elasticobjects {
    package org.fluentcodes.projects.elasticobjects.config {
      interface ListConfigInterface {
          {abstract} + getListParams()
          {abstract} + getListMapper()
          {abstract} + getRowHead()
          {abstract} + hasRowHead()
          {abstract} + getRowStart()
          {abstract} + getRowEnd()
          {abstract} + getLength()
          {abstract} + getOr()
          {abstract} + hasColKeys()
          {abstract} + getColKeys()
          {abstract} + setColKeys()
      }
    }
  }
  

  package org.fluentcodes.projects.elasticobjects {
    package org.fluentcodes.projects.elasticobjects.config {
      abstract class ListIO {
          # ListIO()
          # getListConfig()
          + read()
      }
    }
  }
  

  package org.fluentcodes.projects.elasticobjects {
    package org.fluentcodes.projects.elasticobjects.config {
      interface ListIOInterface {
          {abstract} + read()
          {abstract} + readRow()
          {abstract} + readRow()
          {abstract} + readHead()
          {abstract} + write()
          {abstract} + reset()
          {abstract} + close()
      }
    }
  }
  

  package org.fluentcodes.projects.elasticobjects {
    package org.fluentcodes.projects.elasticobjects.config {
      abstract class ModelConfig {
          {static} - LOG : Logger
          - modelKey : String
          - customParams : Map
          - fieldKeys : List<String>
          - packagePath : String
          - packageGroup : String
          - author : String
          - superKey : String
          - interfaces : String
          - fieldCacheMap : Map<String, FieldConfig>
          - importClasses : Map<String, ModelInterface>
          - interfacesMap : Map<String, ModelInterface>
          - modelClass : Class
          + ModelConfig()
          {static} # add()
          + getKey()
          + getModelKey()
          + getEoParams()
          + getDbParams()
          + getViewParams()
          + getCustomParams()
          + getFieldKeys()
          - setFieldKeys()
          + getPackagePath()
          + getPackageGroup()
          + getAuthor()
          + getSuperKey()
          + getInterfaces()
          + getModelClass()
          + getImportClasses()
          + getImportClasses()
          + getFieldCacheMap()
          + hasField()
          + getField()
          + setModelClass()
          + getSuperModel()
          - setSuperModel()
          - setInterfacesMap()
          + getNaturalValues()
          + getFieldClass()
          - setFieldKeys()
          + isEmpty()
          + getKeyValues()
          + resolve()
          - setModelCacheClass()
          + getShapeType()
          + isToSerialize()
          + hasModelConfigKey()
          + getModelConfigKey()
          + getDefaultImplementation()
          + getPathPattern()
          + getIdKey()
          + getNaturalKeys()
          + getTable()
          + getId()
          + isHibernateAnnotations()
          + equals()
          + toString()
          + toJSON()
          + isContainer()
      }
    }
  }
  

  package org.fluentcodes.projects.elasticobjects {
    package org.fluentcodes.projects.elasticobjects.config {
      class Builder {
          - modelKey : String
          - customParams : Map
          - fieldKeys : List<String>
          - packagePath : String
          - packageGroup : String
          - author : String
          - superKey : String
          - interfaces : String
          + Builder()
          # prepare()
          + build()
      }
    }
  }
  

  package org.fluentcodes.projects.elasticobjects {
    package org.fluentcodes.projects.elasticobjects.config {
      class Builder {
          - module : String
          - subModule : String
          - path : String
          - mapPath : String
          - scope : List<Scope>
          - description : String
          - naturalId : String
          - id : Long
          - creationDate : Date
          - expanded : boolean
          + Builder()
          # prepare()
          # isExpanded()
      }
    }
  }
  

  package org.fluentcodes.projects.elasticobjects {
    package org.fluentcodes.projects.elasticobjects.config {
      class ModelConfigList {
          {static} - LOG : Logger
          + ModelConfigList()
          + getTable()
          + getFieldModel()
          + getField()
          + getFieldClass()
          + keys()
          + size()
          + keysAsIs()
          + set()
          + getAsIs()
          + get()
          + exists()
          + hasKey()
          + remove()
          + create()
          + hasModel()
          + isScalar()
          + isEnum()
          + isMap()
          + isSet()
          + isList()
          + isListType()
          + isMapType()
          + isObject()
          + isNull()
      }
    }
  }
  

  package org.fluentcodes.projects.elasticobjects {
    package org.fluentcodes.projects.elasticobjects.config {
      class Builder {
          - modelKey : String
          - customParams : Map
          - fieldKeys : List<String>
          - packagePath : String
          - packageGroup : String
          - author : String
          - superKey : String
          - interfaces : String
          + Builder()
          # prepare()
          + build()
      }
    }
  }
  

  package org.fluentcodes.projects.elasticobjects {
    package org.fluentcodes.projects.elasticobjects.config {
      class Builder {
          - module : String
          - subModule : String
          - path : String
          - mapPath : String
          - scope : List<Scope>
          - description : String
          - naturalId : String
          - id : Long
          - creationDate : Date
          - expanded : boolean
          + Builder()
          # prepare()
          # isExpanded()
      }
    }
  }
  

  package org.fluentcodes.projects.elasticobjects {
    package org.fluentcodes.projects.elasticobjects.config {
      class ModelConfigMap {
          {static} - LOG : Logger
          + ModelConfigMap()
          + getTable()
          + getFieldModel()
          + getField()
          + keys()
          + size()
          + keysAsIs()
          + set()
          + getAsIs()
          + get()
          + exists()
          + hasKey()
          + remove()
          + create()
          + hasModel()
          + isScalar()
          + isEnum()
          + isMap()
          + isSet()
          + isList()
          + isListType()
          + isMapType()
          + isObject()
          + isNull()
      }
    }
  }
  

  package org.fluentcodes.projects.elasticobjects {
    package org.fluentcodes.projects.elasticobjects.config {
      class Builder {
          - modelKey : String
          - customParams : Map
          - fieldKeys : List<String>
          - packagePath : String
          - packageGroup : String
          - author : String
          - superKey : String
          - interfaces : String
          + Builder()
          # prepare()
          + build()
      }
    }
  }
  

  package org.fluentcodes.projects.elasticobjects {
    package org.fluentcodes.projects.elasticobjects.config {
      class Builder {
          - module : String
          - subModule : String
          - path : String
          - mapPath : String
          - scope : List<Scope>
          - description : String
          - naturalId : String
          - id : Long
          - creationDate : Date
          - expanded : boolean
          + Builder()
          # prepare()
          # isExpanded()
      }
    }
  }
  

  package org.fluentcodes.projects.elasticobjects {
    package org.fluentcodes.projects.elasticobjects.config {
      class ModelConfigNone {
          {static} - LOG : Logger
          + ModelConfigNone()
          + getTable()
          + getFieldModel()
          + getField()
          + getFieldClass()
          + keys()
          + keys()
          + size()
          + isEmpty()
          + set()
          + getAsIs()
          + get()
          + exists()
          + hasKey()
          + remove()
          + create()
          + hasModel()
          + isScalar()
          + isEnum()
          + isMap()
          + isSet()
          + isList()
          + isListType()
          + isMapType()
          + isObject()
          + isNull()
      }
    }
  }
  

  package org.fluentcodes.projects.elasticobjects {
    package org.fluentcodes.projects.elasticobjects.config {
      class Builder {
          - modelKey : String
          - customParams : Map
          - fieldKeys : List<String>
          - packagePath : String
          - packageGroup : String
          - author : String
          - superKey : String
          - interfaces : String
          + Builder()
          # prepare()
          + build()
      }
    }
  }
  

  package org.fluentcodes.projects.elasticobjects {
    package org.fluentcodes.projects.elasticobjects.config {
      class Builder {
          - module : String
          - subModule : String
          - path : String
          - mapPath : String
          - scope : List<Scope>
          - description : String
          - naturalId : String
          - id : Long
          - creationDate : Date
          - expanded : boolean
          + Builder()
          # prepare()
          # isExpanded()
      }
    }
  }
  

  package org.fluentcodes.projects.elasticobjects {
    package org.fluentcodes.projects.elasticobjects.config {
      class ModelConfigObject {
          {static} - LOG : Logger
          - getterMap : Map<String, Method>
          - setterMap : Map<String, Method>
          + ModelConfigObject()
          {static} # findSetter()
          {static} # findGetter()
          + getFieldModel()
          + getFieldModels()
          + getFieldChild()
          + getFieldClass()
          + keys()
          + size()
          + keysAsIs()
          + hasSetter()
          + set()
          + getAsIs()
          + hasGetter()
          + get()
          + exists()
          + hasKey()
          + remove()
          + create()
          + resolve()
          - findSetMethod()
          - findGetMethod()
          + equals()
          + hasModel()
          + isScalar()
          + isEnum()
          + isMap()
          + isSet()
          + isList()
          + isListType()
          + isMapType()
          + isObject()
          + isNull()
      }
    }
  }
  

  package org.fluentcodes.projects.elasticobjects {
    package org.fluentcodes.projects.elasticobjects.config {
      class Builder {
          - modelKey : String
          - customParams : Map
          - fieldKeys : List<String>
          - packagePath : String
          - packageGroup : String
          - author : String
          - superKey : String
          - interfaces : String
          + Builder()
          # prepare()
          + build()
      }
    }
  }
  

  package org.fluentcodes.projects.elasticobjects {
    package org.fluentcodes.projects.elasticobjects.config {
      class Builder {
          - module : String
          - subModule : String
          - path : String
          - mapPath : String
          - scope : List<Scope>
          - description : String
          - naturalId : String
          - id : Long
          - creationDate : Date
          - expanded : boolean
          + Builder()
          # prepare()
          # isExpanded()
      }
    }
  }
  

  package org.fluentcodes.projects.elasticobjects {
    package org.fluentcodes.projects.elasticobjects.config {
      class ModelConfigScalar {
          {static} - LOG : Logger
          + ModelConfigScalar()
          + getTable()
          + getFieldModel()
          + getField()
          + getFieldClass()
          + keys()
          + size()
          + isEmpty()
          + set()
          + getAsIs()
          + get()
          + exists()
          + hasKey()
          + remove()
          + create()
          + hasModel()
          + isScalar()
          + isEnum()
          + isMap()
          + isSet()
          + isList()
          + isObject()
          + isListType()
          + isMapType()
          + isNull()
      }
    }
  }
  

  package org.fluentcodes.projects.elasticobjects {
    package org.fluentcodes.projects.elasticobjects.config {
      class Builder {
          - modelKey : String
          - customParams : Map
          - fieldKeys : List<String>
          - packagePath : String
          - packageGroup : String
          - author : String
          - superKey : String
          - interfaces : String
          + Builder()
          # prepare()
          + build()
      }
    }
  }
  

  package org.fluentcodes.projects.elasticobjects {
    package org.fluentcodes.projects.elasticobjects.config {
      class Builder {
          - module : String
          - subModule : String
          - path : String
          - mapPath : String
          - scope : List<Scope>
          - description : String
          - naturalId : String
          - id : Long
          - creationDate : Date
          - expanded : boolean
          + Builder()
          # prepare()
          # isExpanded()
      }
    }
  }
  

  package org.fluentcodes.projects.elasticobjects {
    package org.fluentcodes.projects.elasticobjects.config {
      class ModelConfigSet {
          {static} - LOG : Logger
          + ModelConfigSet()
          + getTable()
          + getFieldModel()
          + getField()
          + getFieldClass()
          + keys()
          + size()
          + keysAsIs()
          + isEmpty()
          + set()
          + getAsIs()
          + get()
          + exists()
          + hasKey()
          + remove()
          + create()
          + hasModel()
          + isScalar()
          + isEnum()
          + isMap()
          + isSet()
          + isList()
          + isObject()
          + isListType()
          + isMapType()
          + isNull()
      }
    }
  }
  

  package org.fluentcodes.projects.elasticobjects {
    package org.fluentcodes.projects.elasticobjects.config {
      class Builder {
          - modelKey : String
          - customParams : Map
          - fieldKeys : List<String>
          - packagePath : String
          - packageGroup : String
          - author : String
          - superKey : String
          - interfaces : String
          + Builder()
          # prepare()
          + build()
      }
    }
  }
  

  package org.fluentcodes.projects.elasticobjects {
    package org.fluentcodes.projects.elasticobjects.config {
      class Builder {
          - module : String
          - subModule : String
          - path : String
          - mapPath : String
          - scope : List<Scope>
          - description : String
          - naturalId : String
          - id : Long
          - creationDate : Date
          - expanded : boolean
          + Builder()
          # prepare()
          # isExpanded()
      }
    }
  }
  

  package org.fluentcodes.projects.elasticobjects {
    package org.fluentcodes.projects.elasticobjects.config {
      interface ModelInterface {
          {abstract} + getModelKey()
          {abstract} + getEoParams()
          {abstract} + getViewParams()
          {abstract} + getDbParams()
          {abstract} + getCustomParams()
          {abstract} + getModelConfigKey()
          {abstract} + getFieldKeys()
          {abstract} + getShapeType()
          {abstract} + isToSerialize()
          {abstract} + getPackageGroup()
          {abstract} + getAuthor()
          {abstract} + getSuperKey()
          {abstract} + getInterfaces()
          {abstract} + getDefaultImplementation()
          {abstract} + getPathPattern()
          {abstract} + getIdKey()
          {abstract} + isHibernateAnnotations()
          {abstract} + getTable()
          {abstract} + getNaturalKeys()
          {abstract} + getFieldCacheMap()
          {abstract} + getImportClasses()
          {abstract} + getModelClass()
          {abstract} + getPackagePath()
          {abstract} + getSuperModel()
          {abstract} + getNaturalValues()
          {abstract} + getId()
          {abstract} + getField()
          {abstract} + getFieldModel()
          {abstract} + getFieldClass()
          {abstract} + keys()
          {abstract} + getKeyValues()
          {abstract} + size()
          {abstract} + isEmpty()
          {abstract} + set()
          {abstract} + getAsIs()
          {abstract} + get()
          {abstract} + exists()
          {abstract} + hasKey()
          {abstract} + remove()
          {abstract} + create()
          {abstract} + equals()
          {abstract} + hasModel()
          {abstract} + isScalar()
          {abstract} + isMap()
          {abstract} + isMapType()
          {abstract} + isSet()
          {abstract} + isList()
          {abstract} + isListType()
          {abstract} + isObject()
          {abstract} + isNull()
          {abstract} + isEnum()
          {abstract} + isContainer()
          {abstract} + toJSON()
      }
    }
  }
  

  package org.fluentcodes.projects.elasticobjects {
    package org.fluentcodes.projects.elasticobjects.config {
      enum Permissions {
        EXECUTE
        DELETE
        CREATE
        WRITE
        READ
        NOTHING
        value
      }
    }
  }
  

  package org.fluentcodes.projects.elasticobjects {
    package org.fluentcodes.projects.elasticobjects.config {
      class RoleConfig {
          {static} + GUEST : String
          {static} + ANONYM : String
          {static} + SUPERADMIN : String
          - name : String
          + RoleConfig()
          + getKey()
          + getName()
      }
    }
  }
  

  package org.fluentcodes.projects.elasticobjects {
    package org.fluentcodes.projects.elasticobjects.config {
      class Builder {
          - name : String
          + Builder()
          # prepare()
          + build()
      }
    }
  }
  

  package org.fluentcodes.projects.elasticobjects {
    package org.fluentcodes.projects.elasticobjects.config {
      class Builder {
          - module : String
          - subModule : String
          - path : String
          - mapPath : String
          - scope : List<Scope>
          - description : String
          - naturalId : String
          - id : Long
          - creationDate : Date
          - expanded : boolean
          + Builder()
          # prepare()
          # isExpanded()
      }
    }
  }
  

  package org.fluentcodes.projects.elasticobjects {
    package org.fluentcodes.projects.elasticobjects.config {
      class RolePermissions {
          - execute : String
          - create : String
          - write : String
          - read : String
          - delete : String
          - deleteList : List<String>
          - createList : List<String>
          - writeList : List<String>
          - executeList : List<String>
          - readList : List<String>
          + RolePermissions()
          + RolePermissions()
          + RolePermissions()
          - createRoleList()
          - resolve()
          + add()
          - add()
          + hasPermissions()
          + getPermissions()
          - contains()
          + getExecute()
          + setExecute()
          # getExecuteList()
          + getCreate()
          + setCreate()
          # getCreateList()
          + getWrite()
          + setWrite()
          # getWriteList()
          + getRead()
          + setRead()
          # getReadList()
          + getDelete()
          + setDelete()
          # getDeleteList()
      }
    }
  }
  

  package org.fluentcodes.projects.elasticobjects {
    package org.fluentcodes.projects.elasticobjects.config {
      enum Scope {
        DEV
        TEST
        QS
        INT
        STAGE
        PROD
        ALL
        CREATE
      }
    }
  }
  

  package org.fluentcodes.projects.elasticobjects {
    package org.fluentcodes.projects.elasticobjects.config {
      class ScsConfig {
          - fileKey : String
          - scsKey : String
          - fieldDelimiter : String
          - rowDelimiter : String
          + ScsConfig()
          + getKey()
          + getScsKey()
          + getFileKey()
          + getFileConfig()
          + createIO()
          + getFieldDelimiter()
          + getRowDelimiter()
      }
    }
  }
  

  package org.fluentcodes.projects.elasticobjects {
    package org.fluentcodes.projects.elasticobjects.config {
      class Builder {
          - scsKey : String
          - fileKey : String
          - fieldDelimiter : String
          - rowDelimiter : String
          + Builder()
          # prepare()
          + build()
      }
    }
  }
  

  package org.fluentcodes.projects.elasticobjects {
    package org.fluentcodes.projects.elasticobjects.config {
      class Builder {
          # prepare()
      }
    }
  }
  

  package org.fluentcodes.projects.elasticobjects {
    package org.fluentcodes.projects.elasticobjects.config {
      class Builder {
          - mapPath : String
          # prepare()
      }
    }
  }
  

  package org.fluentcodes.projects.elasticobjects {
    package org.fluentcodes.projects.elasticobjects.config {
      class Builder {
          - module : String
          - subModule : String
          - path : String
          - mapPath : String
          - scope : List<Scope>
          - description : String
          - naturalId : String
          - id : Long
          - creationDate : Date
          - expanded : boolean
          + Builder()
          # prepare()
          # isExpanded()
      }
    }
  }
  

  package org.fluentcodes.projects.elasticobjects {
    package org.fluentcodes.projects.elasticobjects.config {
      class ScsIO {
          - scanner : Scanner
          + ScsIO()
          + read()
          + write()
          # getScsConfig()
          + reset()
          + close()
          + readRow()
          + readHead()
          + readRow()
          + write()
      }
    }
  }
  

  package org.fluentcodes.projects.elasticobjects {
    package org.fluentcodes.projects.elasticobjects.config {
      enum ShapeTypes {
        MAP
        LIST
        INTERFACE
        SCALAR_SERIALIZED
        OBJECT
        SCALAR
        SET
        NULL
        NONE
        BEAN
        ACTION
        ACTIONDIV
        ACTIONMODEL
        MODEL
        ADAPTER
        INSTANCE
        ENUM
        CONFIG
        CALL
      }
    }
  }
  

  package org.fluentcodes.projects.elasticobjects {
    package org.fluentcodes.projects.elasticobjects.config {
      class TemplateConfig {
          - templateKey : String
          - keepKey : KeepKeys
          + TemplateConfig()
          + getKey()
          + getExecutorList()
          + execute()
          + getTemplateKey()
      }
    }
  }
  

  package org.fluentcodes.projects.elasticobjects {
    package org.fluentcodes.projects.elasticobjects.config {
      class Builder {
          - templateKey : String
          - keep : KeepKeys
          + Builder()
          # prepare()
          + build()
      }
    }
  }
  

  package org.fluentcodes.projects.elasticobjects {
    package org.fluentcodes.projects.elasticobjects.config {
      enum KeepKeys {
        JAVA
        TARGET
        startComment
        endComment
      }
    }
  }
  

  package org.fluentcodes.projects.elasticobjects {
    package org.fluentcodes.projects.elasticobjects.config {
      class Builder {
          {static} + ADAPTER_PATH : String
          - fileName : String
          - filePath : String
          - fileKey : String
          - cached : Boolean
          - hostKey : String
          + Builder()
          # prepare()
          + build()
      }
    }
  }
  

  package org.fluentcodes.projects.elasticobjects {
    package org.fluentcodes.projects.elasticobjects.config {
      class Builder {
          - mapPath : String
          # prepare()
      }
    }
  }
  

  package org.fluentcodes.projects.elasticobjects {
    package org.fluentcodes.projects.elasticobjects.config {
      class Builder {
          - module : String
          - subModule : String
          - path : String
          - mapPath : String
          - scope : List<Scope>
          - description : String
          - naturalId : String
          - id : Long
          - creationDate : Date
          - expanded : boolean
          + Builder()
          # prepare()
          # isExpanded()
      }
    }
  }
  

  package org.fluentcodes.projects.elasticobjects {
    package org.fluentcodes.projects.elasticobjects.config {
      class UserConfig {
          {static} + GUEST : String
          {static} + ANONYM : String
          {static} + SUPERADMIN : String
          - userKey : String
          - userName : String
          - roles : ArrayList<String>
          + UserConfig()
          + getKey()
          + getUserKey()
          + getUserName()
          + getRoles()
      }
    }
  }
  

  package org.fluentcodes.projects.elasticobjects {
    package org.fluentcodes.projects.elasticobjects.config {
      class Builder {
          - userKey : String
          - userName : String
          - roles : ArrayList<String>
          + Builder()
          # prepare()
          + build()
      }
    }
  }
  

  package org.fluentcodes.projects.elasticobjects {
    package org.fluentcodes.projects.elasticobjects.config {
      class Builder {
          - module : String
          - subModule : String
          - path : String
          - mapPath : String
          - scope : List<Scope>
          - description : String
          - naturalId : String
          - id : Long
          - creationDate : Date
          - expanded : boolean
          + Builder()
          # prepare()
          # isExpanded()
      }
    }
  }
  

  package org.fluentcodes.projects.elasticobjects {
    package org.fluentcodes.projects.elasticobjects.config {
      class ValueConfig {
          - value : Object
          - valueKey : String
          + ValueConfig()
          + getKey()
          + getValue()
          + getValueKey()
      }
    }
  }
  

  package org.fluentcodes.projects.elasticobjects {
    package org.fluentcodes.projects.elasticobjects.config {
      class Builder {
          - value : Object
          - valueKey : String
          + Builder()
          # prepare()
          + build()
      }
    }
  }
  

  package org.fluentcodes.projects.elasticobjects {
    package org.fluentcodes.projects.elasticobjects.config {
      class Builder {
          - module : String
          - subModule : String
          - path : String
          - mapPath : String
          - scope : List<Scope>
          - description : String
          - naturalId : String
          - id : Long
          - creationDate : Date
          - expanded : boolean
          + Builder()
          # prepare()
          # isExpanded()
      }
    }
  }
  

  package org.fluentcodes.projects.elasticobjects {
    package org.fluentcodes.projects.elasticobjects.config {
      class ViewFieldParams {
          - viewKey : String
          - inputKey : String
          + ViewFieldParams()
          + getViewKey()
          + getInputKey()
      }
    }
  }
  

  package org.fluentcodes.projects.elasticobjects {
    package org.fluentcodes.projects.elasticobjects.config {
      class ViewParams {
          - viewKey : String
          - inputKey : String
          + ViewParams()
          + getViewKey()
          + getInputKey()
      }
    }
  }
  

  ConfigConfig -up-|> ConfigImpl
  ConfigConfig +-down- Builder
  ConfigConfig +-down- Builder
  Builder -up-|> Builder
  ConfigIO -up-|> ConfigImpl
  ConfigIO o-- RolePermissions : rolePermissions
  ConfigIO +-down- Builder
  ConfigIO +-down- Builder
  Builder -up-|> Builder
  Builder o-- RolePermissions : rolePermissions
  ConfigImpl -up-|> Config
  ConfigImpl -up-|> ModelImpl
  ConfigImpl o-- EOConfigsCache : provider
  ConfigImpl +-down- Builder
  ConfigsImmutable -up-|> EOConfigs
  ConfigsModel -up-|> EOConfigs
  EOConfigReader o-- EOConfigsCache : configsCache
  EOConfigReader o-- Scope : scope
  EOConfigs -up-|> EOConfigsInterface
  EOConfigs o-- EOConfigsCache : configsCache
  EOConfigs o-- Scope : scope
  EOConfigsCache o-- Scope : scope
  EOConfigsField -up-|> EOConfigs
  EOFieldParams o-- EOConfigsCache : configsCache
  EOFieldParams o-- PathPattern : pathPattern
  EOParams o-- ShapeTypes : shapeType
  EOParams o-- PathPattern : pathPattern
  FieldConfig -up-|> ConfigImpl
  FieldConfig o-- DBFieldParams : dbFieldParams
  FieldConfig o-- EOFieldParams : eoFieldParams
  FieldConfig o-- ViewFieldParams : viewFieldParams
  FieldConfig o-- Models : models
  FieldConfig +-down- Builder
  FieldConfig +-down- Builder
  Builder -up-|> Builder
  Builder o-- DBFieldParams : dbFieldParams
  Builder o-- EOFieldParams : eoFieldParams
  Builder o-- ViewFieldParams : viewFieldParams
  Builder o-- Models : models
  FileConfig -up-|> ConfigIO
  FileConfig o-- HostConfig : hostCache
  FileConfig +-down- Builder
  FileConfig +-down- Builder
  FileConfig +-down- Builder
  Builder -up-|> Builder
  Builder -up-|> Builder
  Builder o-- RolePermissions : rolePermissions
  FileIO -up-|> IOInterface
  FileIO o-- FileConfig : fileConfig
  HostConfig -up-|> ConfigIO
  HostConfig +-down- Builder
  HostConfig +-down- Builder
  HostConfig +-down- Builder
  Builder -up-|> Builder
  Builder -up-|> Builder
  Builder o-- RolePermissions : rolePermissions
  JsonConfig -up-|> FileConfig
  JsonConfig o-- JSONSerializationType : serializationType
  JsonConfig +-down- Builder
  JsonConfig +-down- Builder
  JsonConfig +-down- Builder
  JsonConfig +-down- Builder
  Builder -up-|> Builder
  Builder o-- JSONSerializationType : serializationType
  Builder -up-|> Builder
  Builder -up-|> Builder
  Builder o-- RolePermissions : rolePermissions
  ListConfig -up-|> ListConfigInterface
  ListConfig -up-|> ConfigIO
  ListConfig o-- ListParams : listParams
  ListConfig o-- ListMapper : listMapper
  ListConfig +-down- Builder
  ListConfig +-down- Builder
  ListConfig +-down- Builder
  Builder -up-|> Builder
  Builder o-- ListParams : listParams
  Builder o-- ListMapper : listMapper
  Builder -up-|> Builder
  Builder o-- RolePermissions : rolePermissions
  ListIO -up-|> ListIOInterface
  ListIO o-- ListConfig : listConfig
  ModelConfig -up-|> ModelInterface
  ModelConfig -up-|> ConfigImpl
  ModelConfig o-- DBParams : dbParams
  ModelConfig o-- EOParams : eoParams
  ModelConfig o-- ViewParams : viewParams
  ModelConfig o-- ModelInterface : superModel
  ModelConfig +-down- Builder
  ModelConfig +-down- Builder
  Builder -up-|> Builder
  Builder o-- DBParams : dbParams
  Builder o-- EOParams : eoParams
  Builder o-- ViewParams : viewParams
  ModelConfigList -up-|> ModelInterface
  ModelConfigList -up-|> ModelConfig
  ModelConfigList +-down- Builder
  ModelConfigList +-down- Builder
  Builder -up-|> Builder
  Builder o-- DBParams : dbParams
  Builder o-- EOParams : eoParams
  Builder o-- ViewParams : viewParams
  ModelConfigMap -up-|> ModelInterface
  ModelConfigMap -up-|> ModelConfig
  ModelConfigMap +-down- Builder
  ModelConfigMap +-down- Builder
  Builder -up-|> Builder
  Builder o-- DBParams : dbParams
  Builder o-- EOParams : eoParams
  Builder o-- ViewParams : viewParams
  ModelConfigNone -up-|> ModelInterface
  ModelConfigNone -up-|> ModelConfig
  ModelConfigNone +-down- Builder
  ModelConfigNone +-down- Builder
  Builder -up-|> Builder
  Builder o-- DBParams : dbParams
  Builder o-- EOParams : eoParams
  Builder o-- ViewParams : viewParams
  ModelConfigObject -up-|> ModelInterface
  ModelConfigObject -up-|> ModelConfig
  ModelConfigObject +-down- Builder
  ModelConfigObject +-down- Builder
  Builder -up-|> Builder
  Builder o-- DBParams : dbParams
  Builder o-- EOParams : eoParams
  Builder o-- ViewParams : viewParams
  ModelConfigScalar -up-|> ModelInterface
  ModelConfigScalar -up-|> ModelConfig
  ModelConfigScalar +-down- Builder
  ModelConfigScalar +-down- Builder
  Builder -up-|> Builder
  Builder o-- DBParams : dbParams
  Builder o-- EOParams : eoParams
  Builder o-- ViewParams : viewParams
  ModelConfigSet -up-|> ModelInterface
  ModelConfigSet -up-|> ModelConfig
  ModelConfigSet +-down- Builder
  ModelConfigSet +-down- Builder
  Builder -up-|> Builder
  Builder o-- DBParams : dbParams
  Builder o-- EOParams : eoParams
  Builder o-- ViewParams : viewParams
  RoleConfig -up-|> ConfigImpl
  RoleConfig +-down- Builder
  RoleConfig +-down- Builder
  Builder -up-|> Builder
  ScsConfig -up-|> ListConfig
  ScsConfig o-- FileConfig : fileConfig
  ScsConfig +-down- Builder
  ScsConfig +-down- Builder
  ScsConfig +-down- Builder
  ScsConfig +-down- Builder
  Builder -up-|> Builder
  Builder -up-|> Builder
  Builder o-- ListParams : listParams
  Builder o-- ListMapper : listMapper
  Builder -up-|> Builder
  Builder o-- RolePermissions : rolePermissions
  ScsIO -up-|> ListIOInterface
  ScsIO -up-|> ListIO
  TemplateConfig -up-|> FileConfig
  TemplateConfig o-- ExecutorList : executorList
  TemplateConfig +-down- Builder
  TemplateConfig +-down- KeepKeys
  TemplateConfig +-down- Builder
  TemplateConfig +-down- Builder
  TemplateConfig +-down- Builder
  Builder -up-|> Builder
  Builder -up-|> Builder
  Builder -up-|> Builder
  Builder o-- RolePermissions : rolePermissions
  UserConfig -up-|> ConfigImpl
  UserConfig +-down- Builder
  UserConfig +-down- Builder
  Builder -up-|> Builder
  ValueConfig -up-|> ConfigImpl
  ValueConfig +-down- Builder
  ValueConfig +-down- Builder
  Builder -up-|> Builder


right footer


PlantUML diagram generated by SketchIt! (https://bitbucket.org/pmesmeur/sketch.it)
For more information about this tool, please contact philippe.mesmeur@gmail.com
endfooter

@enduml
